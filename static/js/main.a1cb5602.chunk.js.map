{"version":3,"sources":["Components/Utils/utils.jsx","Components/Algorithm/floodFillBFS.jsx","Components/Algorithm/floodFill.jsx","Components/Visualiser/floodFillComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["delay","MakeDelay","milisec","a","Promise","resolve","setTimeout","row","col","n","queue","this","arr","push","size","length","shift","fillColor","hexToRgb","hex","replace","m","r","g","b","result","exec","parseInt","giveNbrs","pos","helper","grid","src","visited","Array","k","q","empty","node","front","style","backgroundColor","pop","nbrs","i","floodFillBFS","cx","cy","document","querySelectorAll","getElementById","value","dx","dy","j","ele","lo","floodFill","FloodFill","useState","color","setColor","setArr","draw","setDraw","dfs","setDFS","useEffect","ar","w","window","innerWidth","h","innerHeight","offsetHeight","sr","id","className","href","float","padding","target","rel","width","process","alt","type","onChange","e","handleColorChange","onClick","checked","handleChange","prev","map","ridx","cidx","height","outline","display","transition","transitionTimingFunction","onMouseEnter","val","currentColor","handleMouseEnter","onMouseDown","ro","co","handleCoordinates","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a1cb5602.chunk.js","sourcesContent":["export var delay = 10;\r\n\r\nexport function changeDelay(val) {\r\n\tdelay = val;\r\n}\r\n\r\nexport async function MakeDelay(milisec) {\r\n\treturn new Promise(resolve => {\r\n\t\tsetTimeout(() => { resolve('') }, milisec);\r\n\t})\r\n}\r\n\r\nexport var row = 23;\r\nexport var col = 60;\r\n\r\nexport function setRC(r, c) {\r\n\trow = r;\r\n\tcol = c;\r\n}","import { col, delay, MakeDelay } from \"../Utils/utils\";\r\n\r\nclass queue {\r\n\tconstructor() {\r\n\t\tthis.arr = [];\r\n\t}\r\n\r\n\tpush(n) {\r\n\t\tthis.arr.push(n);\r\n\t\tthis.size += 1;\r\n\t}\r\n\r\n\tempty() {\r\n\t\treturn this.arr.length === 0;\r\n\t}\r\n\r\n\tfront() {\r\n\t\treturn this.arr[0];\r\n\t}\r\n\r\n\tpop() {\r\n\t\tif (this.arr.length !== 0) {\r\n\t\t\tthis.arr.shift();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nvar fillColor = 'pink';\r\nvar n;\r\n\r\nfunction hexToRgb(hex) {\r\n\t// copied from stack overflow\r\n\t// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\thex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n\t\treturn r + r + g + g + b + b;\r\n\t});\r\n\r\n\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\tif (result) {\r\n\t\tvar c = `rgb(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)})`\r\n\t\treturn c;\r\n\t}\r\n\telse {\r\n\t\treturn 'black'\r\n\t}\r\n}\r\n\r\nfunction giveNbrs(pos) {\r\n\tvar arr = [];\r\n\tif ((pos - 1 >= 0) && (pos % col !== 0)) {\r\n\t\tarr.push(pos - 1);\r\n\t}\r\n\tif ((pos + 1 < n) && ((pos + 1) % col !== 0)) {\r\n\t\tarr.push(pos + 1);\r\n\t}\r\n\tif (pos - col >= 0) {\r\n\t\tarr.push(pos - col);\r\n\t}\r\n\tif (pos + col < n) {\r\n\t\tarr.push(pos + col)\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\nasync function helper(grid, src) {\r\n\tvar visited = new Array(n);\r\n\tfor (var k = 0; k < n; k++) {\r\n\t\tvisited[k] = false;\r\n\t}\r\n\tvar q = new queue();\r\n\tq.push(src);\r\n\tvisited[src] = true;\r\n\r\n\twhile (q.empty() !== true) {\r\n\t\tvar node = q.front();\r\n\t\tgrid[node].style.backgroundColor = fillColor;\r\n\t\tawait MakeDelay(delay)\r\n\t\tq.pop();\r\n\r\n\t\tvar nbrs = giveNbrs(node);\r\n\t\tfor (var i = 0; i < nbrs.length; i++) {\r\n\t\t\tif (visited[nbrs[i]] === false && grid[nbrs[i]].style.backgroundColor !== 'black') {\r\n\t\t\t\tq.push(nbrs[i]);\r\n\t\t\t\tvisited[nbrs[i]] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport async function floodFillBFS(cx, cy) {\r\n\tvar grid = document.querySelectorAll('.element-block');\r\n\tfillColor = document.getElementById('colorBox').value;\r\n\tfillColor = hexToRgb(fillColor);\r\n\tn = grid.length;\r\n\tvar pos = (cx * col) + cy;\r\n\tawait helper(grid, pos);\r\n}","import { col, delay, MakeDelay, row } from \"../Utils/utils\";\r\n\r\nvar fillColor = 'pink';\r\nvar n;\r\nvar dx = [0, 1, -1, 0];\r\nvar dy = [1, 0, 0, -1]\r\n\r\n\r\nfunction hexToRgb(hex) {\r\n\t// copied from stack overflow\r\n\t// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\thex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n\t\treturn r + r + g + g + b + b;\r\n\t});\r\n\r\n\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\tif (result) {\r\n\t\tvar c = `rgb(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)})`\r\n\t\treturn c;\r\n\t}\r\n\telse {\r\n\t\treturn 'black'\r\n\t}\r\n}\r\n\r\n\r\nasync function helper(grid, i, j) {\r\n\tvar pos = (i) * col + j;\r\n\tif (i < 0 || i >= row || j < 0 || j >= col || pos < 0 || pos >= n) {\r\n\t\treturn;\r\n\t}\r\n\tvar ele = grid[pos];\r\n\tif (ele.style.backgroundColor === 'black') {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (ele.style.backgroundColor === fillColor) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tele.style.backgroundColor = 'pink'\r\n\tawait MakeDelay(delay);\r\n\r\n\tawait MakeDelay(delay);\r\n\tele.style.backgroundColor = fillColor;\r\n\r\n\tfor (var lo = 0; lo < 4; lo++) {\r\n\t\tawait helper(grid, i + dx[lo], j + dy[lo]);\r\n\t}\r\n}\r\n\r\nexport async function floodFill(cx, cy) {\r\n\tvar grid = document.querySelectorAll('.element-block');\r\n\tfillColor = document.getElementById('colorBox').value;\r\n\tfillColor = hexToRgb(fillColor);\r\n\tn = grid.length;\r\n\tawait helper(grid, cx, cy);\r\n}","import { useEffect, useState } from \"react\";\r\nimport './floodFillComponent.css'\r\nimport { col, setRC } from \"../Utils/utils\";\r\n\r\n// allgos\r\nimport { floodFillBFS } from '../Algorithm/floodFillBFS'\r\nimport { floodFill } from \"../Algorithm/floodFill\";\r\n\r\n\r\n\r\nfunction FloodFill() {\r\n\tvar [color, setColor] = useState('#ff0000')\r\n\tvar [arr, setArr] = useState([]);\r\n\tvar [draw, setDraw] = useState(false)\r\n\tvar [dfs, setDFS] = useState(true)\r\n\r\n\tuseEffect(() => {\r\n\t\tvar ar = []\r\n\t\tvar w = window.innerWidth - 30\r\n\t\tw = parseInt(w / 25)\r\n\r\n\t\tvar h = window.innerHeight - document.getElementById('navbar').offsetHeight - 30\r\n\t\th = parseInt(h / 25)\r\n\r\n\t\tsetRC(h, w);\r\n\r\n\t\tfor (var i = 0; i < h; i++) {\r\n\t\t\tvar sr = []\r\n\t\t\tfor (var j = 0; j < w; j++) {\r\n\t\t\t\tsr.push('element-block');\r\n\t\t\t}\r\n\t\t\tar.push(sr)\r\n\t\t}\r\n\t\tsetArr(ar)\r\n\t}, [])\r\n\r\n\tfunction handleColorChange(e) {\r\n\t\tsetColor(e.target.value)\r\n\t}\r\n\r\n\tfunction handleCoordinates(e) {\r\n\t\tvar val = document.getElementById('toggler').checked;\r\n\t\tif (val === false) {\r\n\t\t\te.target.style.backgroundColor = 'rgb(247, 247, 207)'\r\n\t\t\tvar grid = document.querySelectorAll('.element-block');\r\n\t\t\tfor (var i = 0; i < grid.length; i++) {\r\n\t\t\t\tif (grid[i].style.backgroundColor === 'rgb(247, 247, 207)') {\r\n\t\t\t\t\tvar ro = parseInt(i / col);\r\n\t\t\t\t\tvar co = i - ro * col\r\n\t\t\t\t\tif (dfs) {\r\n\t\t\t\t\t\tfloodFill(ro, co);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfloodFillBFS(ro, co)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetDraw(prev => !prev)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleMouseEnter(e) {\r\n\t\tvar val = document.getElementById('toggler').checked;\r\n\t\tvar currentColor = e.target.style.backgroundColor;\r\n\t\tif (val === true && draw === true) {\t\t\t// draw mode\r\n\t\t\tif (currentColor === 'black') {\r\n\t\t\t\te.target.style.backgroundColor = 'white'\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\te.target.style.backgroundColor = 'black'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleChange(e) {\r\n\t\tvar val = e.target.checked;\r\n\t\tif (val === true) {\t\t\t// draw mode\r\n\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div id='navbar'>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><a className='heading' href=\"#home\">Flood FIll Algorithm</a></li>\r\n\t\t\t\t\t<li style={{ float: 'right' }}>\r\n\t\t\t\t\t\t<a style={{ padding: '5px' }} href=\"https://github.com/jindal2209/FloodFill_Visualizer\" target='_blank' rel='noreferrer' >\r\n\t\t\t\t\t\t\t<img style={{ width: '70px' }} src={process.env.PUBLIC_URL + \"/iff.png\"} alt='myGithub' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<div className='grid-container'>\r\n\t\t\t\t\t<div className='left'>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type='color' id='colorBox' value={color} onChange={(e) => handleColorChange(e)} />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t<label className=\"switch\">\r\n\t\t\t\t\t\t\t<input id='toggler' type=\"checkbox\" onClick={(e) => handleChange(e)} />\r\n\t\t\t\t\t\t\t<a href='#home'> </a>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<span className=\"left-span\">Fill</span>\r\n\t\t\t\t\t\t\t\t<span className=\"right-span\">Draw</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t&nbsp;<br />\r\n\t\t\t\t\t\t<label className=\"switch\">\r\n\t\t\t\t\t\t\t<input id='toggler' type=\"checkbox\" onClick={() => setDFS(prev => !prev)} />\r\n\t\t\t\t\t\t\t<a href='#home'> </a>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<span className=\"left-span\">DFS</span>\r\n\t\t\t\t\t\t\t\t<span className=\"right-span\">BFS</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='right'>\r\n\t\t\t\t\t\tToggle the switch to draw/fill. <br />\r\n\t\t\t\t\t\tDraw: Click on any box to start drawing. Click again to stop drawing.<br />Fill : Select the colour and click on area to color\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className='box'>\r\n\t\t\t\t\t{arr.map((row, ridx) => (\r\n\t\t\t\t\t\t<div className={ridx} key={ridx} >\r\n\t\t\t\t\t\t\t{row.map((col, cidx) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={`${col}`}\r\n\t\t\t\t\t\t\t\t\tkey={cidx}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\t\t\theight: '25px',\r\n\t\t\t\t\t\t\t\t\t\twidth: '25px',\r\n\t\t\t\t\t\t\t\t\t\toutline: '1px solid rgb(175, 216, 248)',\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\t\t\t\t\t\t\ttransition: '0.6s',\r\n\t\t\t\t\t\t\t\t\t\ttransitionTimingFunction: 'ease-in'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonMouseEnter={(e) => handleMouseEnter(e)}\r\n\t\t\t\t\t\t\t\t\tonMouseDown={(e) => handleCoordinates(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FloodFill;","import './App.css';\r\nimport FloodFill from './Components/Visualiser/floodFillComponent';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<FloodFill />\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}